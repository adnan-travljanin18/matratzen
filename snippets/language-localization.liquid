{%- comment -%}
  Renders the language picker for the localization form

  Accepts:
    - localPosition: pass in the position in which the form is coming up to create specific IDs
{%- endcomment -%}

<div class="language-picker">
  <div class="language-list">
    {%- for language in localization.available_languages -%}
      <button
        type="button"
        class="language-button{% if language.iso_code == localization.language.iso_code %} active{% endif %}"
        aria-current="{% if language.iso_code == localization.language.iso_code %}true{% endif %}"
        data-value="{{ language.iso_code }}"
        onclick="updateLanguage('{{ language.iso_code }}')"
      >
        {{ language.short_iso_code | default: language.iso_code | capitalize }}
      </button>
      {%- unless forloop.last -%}
        <span class="separator">/</span>
      {%- endunless -%}
    {%- endfor -%}
  </div>
</div>
<input type="hidden" name="locale_code" value="{{ localization.language.iso_code }}">

<script>
  function updateLanguage(selectedLanguage) {
    const form = document.querySelector('.localization-form');
    const input = form.querySelector('input[name="locale_code"]');
    
    // Update active state
    document.querySelectorAll('.language-button').forEach(button => {
      button.classList.remove('active');
    });
    
    const activeButton = document.querySelector(`.language-button[data-value="${selectedLanguage}"]`);
    activeButton.classList.add('active');
    
    // Set the selected language in the form input
    input.value = selectedLanguage;

    // Submit the form or perform any other necessary actions
    if (form) form.submit();
  }
</script>
